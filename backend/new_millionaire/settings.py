"""
Django settings for new_millionaire project.

Generated by 'django-admin startproject' using Django 2.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import environ
from os import environ as envi
#import dj_database_url
from decouple import config
import django_heroku

from django.utils.translation import gettext_lazy as _, pgettext_lazy
# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(__file__))
PROJECT_DIR = os.path.dirname(BASE_DIR)

env = environ.Env()
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
#DEBUG = True

SECRET_KEY = config('SECRET_KEY')
DEBUG = config('DEBUG', default=False, cast=bool)



ALLOWED_HOSTS = ["localhost", '192.168.1.23', '127.0.0.1', '10.0.2.2',]
#ALLOWED_HOSTS = ['192.168.1.23']


# Application definition

INSTALLED_APPS = [
    'jet.dashboard',
    'jet',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'fluent_comments',
    'userena',
    'django.contrib.sites',
    'django.contrib.gis',
    'django.contrib.sessions',
    'django.contrib.messages',
    "django.contrib.sitemaps",
    'django.contrib.staticfiles',
    'channels',
    'guardian',
    'analytical',
    #'rosetta',
    #'south',
    #'client_admin',
    'easy_thumbnails',
    #'semanticuiforms',
    'django.contrib.humanize',
    'articles',
    'about_me',
    'sorl.thumbnail',
    'django_comments',
    'graphene_django',
    'places',
    'markdownx',
    'new_millionaire',
    'boards',
    'django_chatter',
    'jobs',
    'externalfeed',
    'posts',
    'qa',
    'api',
    'likes',
    'comments_post',
    'search',
    'share',
    'profiles',
    'users_infos',
    'django_user_agents',
    'taggit_serializer',
    'tracking_analyzer',
    #'mapwidgets',
    #'tracking',
    'django_geoip',
    'notifications',
    'widget_tweaks',
    #'friendships',
    'fm',
    'crispy_forms',
    'bootstrapform',
    'rest_framework',
    'rest_framework.authtoken',
    #'bootstrap4_datetime',
    #'haystack',
    'taggit',
    'markdown',
    'martor',
    'pagedown',
    'ckeditor',
    'bootstrap3',
    "phonenumber_field",
    'bootstrap4',
    'bootstrap3_datetime',
    'bootstrap_datepicker_plus',
    #"django_prices_openexchangerates",

    # local apps
]


FEED_SOURCES = (
    # (key, source, prefix to strip from the url)
    ('bbc',
     'http://feeds.bbci.co.uk/news/rss.xml',
     'http://www.bbc.co.uk/news'),
)

HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'

HAYSTACK_CONNECTIONS = {
              'default': {
                    'ENGINE': 'haystack.backends.elasticsearch_backend.ElasticsearchSearchEngine',
                    'URL': 'http://127.0.0.1:9200/',
                    'INDEX_NAME': 'jobsearch',
              },
    }

CRISPY_TEMPLATE_PACK = 'bootstrap4'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.SessionAuthentication',

),
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAdminUser'
   ),
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    #'tracking.middleware.VisitorTrackingMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
    'userena.middleware.langmiddleware',
    'userena.middleware.country',
    'userena.middleware.onlinecheck',
    'django_user_agents.middleware.UserAgentMiddleware',
    
    #'tracking.middleware.VisitorCleanUpMiddleware',
    #'core.middleware.site',
]


DEFAULT_COUNTRY = os.environ.get("DEFAULT_COUNTRY", "FR")

GOOGLE_MAPS_KEY= "AIzaSyCtBwCt8DRwCLX2zFZNZhwA_-r1qQTFksQ"
PLACES_MAPS_API_KEY = "AIzaSyCtBwCt8DRwCLX2zFZNZhwA_-r1qQTFksQ"
TRACKING_USE_GEOIP=True
GEOIP_CACHE_TYPE=1
DEFAULT_TRACKING_TEMPLATE= 'tracking/visitor_map.html'
# check user online

CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
            'LOCATION': '127.0.0.1:11211',              
        }
    }

# Number of seconds of inactivity before a user is marked offline
USER_ONLINE_TIMEOUT = 300

# Number of seconds that we will keep track of inactive users for before 
# their last seen is removed from the cache
USER_LASTSEEN_TIMEOUT = 60 * 60 * 24 * 7


# Add the Guardian and userena authentication backends
AUTHENTICATION_BACKENDS = (
    'userena.backends.UserenaAuthenticationBackend',
    'guardian.backends.ObjectPermissionBackend',
    'django.contrib.auth.backends.ModelBackend',
)

CKEDITOR_CONFIGS = {
    "default": {
        "removePlugins": "stylesheetparser",
    }
}
AWS_QUERYSTRING_AUTH = False



def custom_show_toolbar(request):
    return True



from django import get_version
from packaging import version



ROOT_URLCONF = 'new_millionaire.urls'
LOGOUT_REDIRECT_URL = 'home'
LOGIN_REDIRECT_URL = '/'
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
LOGIN_URL = '/accounts/signin/'
AUTH_PROFILE_MODULE = 'profiles.Profile'
USERENA_DISABLE_PROFILE_LIST = True
USERENA_MUGSHOT_SIZE = 200

# Email settings
EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            
            'libraries':{
            'urls': 'templatetags.urls',
            'custom_tags': 'templatetags.custom_tags',
            'frontend_tags' : 'templatetags.frontend_tags',

            }
        },
    },
]

#django-analytical
CHARTBEAT_USER_ID = '123456789'
CHARTBEAT_AUTO_DOMAIN = False
CLICKMAP_TRACKER_CODE = '12345678....912'
CLICKY_SITE_ID = '12345678'
CRAZY_EGG_ACCOUNT_NUMBER = '12345678'
FACEBOOK_PIXEL_ID = '1234567890'
GAUGES_SITE_ID = '0123456789abcdef0123456789abcdef'
GOOGLE_ANALYTICS_PROPERTY_ID = 'UA-1234567-8'
HUBSPOT_PORTAL_ID = '1234'
HUBSPOT_DOMAIN = 'somedomain.web101.hubspot.com'
INTERCOM_APP_ID = '0123456789abcdef0123456789abcdef01234567'
KISS_INSIGHTS_ACCOUNT_NUMBER = '12345'
KISS_INSIGHTS_SITE_CODE = 'abc'
KISS_METRICS_API_KEY = '0123456789abcdef0123456789abcdef01234567'
MIXPANEL_API_TOKEN = '0123456789abcdef0123456789abcdef'
OLARK_SITE_ID = '1234-567-89-0123'
OPTIMIZELY_ACCOUNT_NUMBER = '1234567'
PERFORMABLE_API_KEY = '123abc'
PIWIK_DOMAIN_PATH = 'your.piwik.server/optional/path'
PIWIK_SITE_ID = '123'
RATING_MAILRU_COUNTER_ID = '1234567'
WOOPRA_DOMAIN = 'abcde.com'
YANDEX_METRICA_COUNTER_ID = '12345678'

# Django JET

JET_DEFAULT_THEME = 'green'
JET_THEMES = [
    {
        'theme': 'default',
        'color': '#47bac1',
        'title': 'Default'
    },
    {
        'theme': 'green',
        'color': '#ffa31a',
        'title': 'Green'
    },
    {
        'theme': 'light-green',
        'color': '#2faa60',
        'title': 'Light Green'
    },
    {
        'theme': 'light-violet',
        'color': '#a464c4',
        'title': 'Light Violet'
    },
    {
        'theme': 'light-blue',
        'color': '#5EADDE',
        'title': 'Light Blue'
    },
    {
        'theme': 'light-gray',
        'color': '#222',
        'title': 'Light Gray'
    }
]
#JET_INDEX_DASHBOARD = 'dashboard.Mydash'
#JET_APP_INDEX_DASHBOARD = 'dashboard.CustomAppIndexDashboard'

JET_MODULE_YANDEX_METRIKA_CLIENT_ID = '46de85bff0f94c82bbf42be177f128a2'
JET_MODULE_YANDEX_METRIKA_CLIENT_SECRET = '01107ac1049b49ab9b24e60e95ba2a93'
JET_MODULE_GOOGLE_ANALYTICS_CLIENT_SECRETS_FILE = os.path.join(BASE_DIR, 'client_secrets.json')

#######################################################
WSGI_APPLICATION = 'new_millionaire.wsgi.application'
ASGI_APPLICATION = "new_millionaire.routing.application"

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = False

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [('127.0.0.1', 6379)]
        },
    },
}
""""
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'mydata',                      
        'USER': 'abed',
        'PASSWORD': 'zimfils',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}
"""

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'zim',                      
        'USER': 'zim',
        'PASSWORD': 'zim',
        'HOST': 'localhost',
        'PORT': '5432',
    }
}


MARTOR_ENABLE_CONFIGS = {
    'imgur': 'true',     # to enable/disable imgur/custom uploader.
    'mention': 'true',   # to enable/disable mention
    'jquery': 'true',    # to include/revoke jquery (require for admin default django)
    'living': 'false'    # to enable/disable live updates in preview
}

CORS_ORIGIN_WHITELIST = [
    "http://localhost:4200"
]

GEOIP_PATH = [os.path.join(BASE_DIR, "geoip")]
# SECURITY
# ------------------------------------------------------------------------------
# https://docs.djangoproject.com/en/dev/ref/settings/#secure-proxy-ssl-header
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
# # https://docs.djangoproject.com/en/dev/ref/settings/#secure-ssl-redirect
# #SECURE_SSL_REDIRECT = env.bool('SECURE_SSL_REDIRECT', default=True)
# # https://docs.djangoproject.com/en/dev/ref/settings/#session-cookie-secure
# SESSION_COOKIE_SECURE = True
# # https://docs.djangoproject.com/en/dev/ref/settings/#session-cookie-httponly
# SESSION_COOKIE_HTTPONLY = True
# # https://docs.djangoproject.com/en/dev/ref/settings/#csrf-cookie-secure
# CSRF_COOKIE_SECURE = True
# # https://docs.djangoproject.com/en/dev/ref/settings/#csrf-cookie-httponly
# CSRF_COOKIE_HTTPONLY = True
# # https://docs.djangoproject.com/en/dev/topics/security/#ssl-https
# # https://docs.djangoproject.com/en/dev/ref/settings/#secure-hsts-seconds
# # TODO: set this to 60 seconds first and then to 518400 once you prove the former works
# #SECURE_HSTS_SECONDS = 60
# # https://docs.djangoproject.com/en/dev/ref/settings/#secure-hsts-include-subdomains
# #SECURE_HSTS_INCLUDE_SUBDOMAINS = env.bool('SECURE_HSTS_INCLUDE_SUBDOMAINS', default=True)
# # https://docs.djangoproject.com/en/dev/ref/settings/#secure-hsts-preload
# #SECURE_HSTS_PRELOAD = env.bool('SECURE_HSTS_PRELOAD', default=True)
# # https://docs.djangoproject.com/en/dev/ref/middleware/#x-content-type-options-nosniff
# #SECURE_CONTENT_TYPE_NOSNIFF = env.bool('SECURE_CONTENT_TYPE_NOSNIFF', default=True)
# # https://docs.djangoproject.com/en/dev/ref/settings/#secure-browser-xss-filter
# SECURE_BROWSER_XSS_FILTER = True
# # https://docs.djangoproject.com/en/dev/ref/settings/#x-frame-options
# X_FRAME_OPTIONS = 'DENY'


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

TIME_ZONE = "UTC"
LANGUAGE_CODE = "en"
LANGUAGES = [
    ("ar", _("Arabic")),
    ("az", _("Azerbaijani")),
    ("bg", _("Bulgarian")),
    ("bn", _("Bengali")),
    ("ca", _("Catalan")),
    ("cs", _("Czech")),
    ("da", _("Danish")),
    ("de", _("German")),
    ("en", _("English")),
    ("es", _("Spanish")),
    ("es-co", _("Colombian Spanish")),
    ("et", _("Estonian")),
    ("fa", _("Persian")),
    ("fr", _("French")),
    ("hi", _("Hindi")),
    ("hu", _("Hungarian")),
    ("id", _("Indonesian")),
    ("it", _("Italian")),
    ("ja", _("Japanese")),
    ("ko", _("Korean")),
    ("lt", _("Lithuanian")),
    ("mn", _("Mongolian")),
    ("nb", _("Norwegian")),
    ("nl", _("Dutch")),
    ("pl", _("Polish")),
    ("pt", _("Portuguese")),
    ("pt-br", _("Brazilian Portuguese")),
    ("ro", _("Romanian")),
    ("ru", _("Russian")),
    ("sk", _("Slovak")),
    ("sq", _("Albanian")),
    ("sr", _("Serbian")),
    ("sw", _("Swahili")),
    ("sv", _("Swedish")),
    ("th", _("Thai")),
    ("tr", _("Turkish")),
    ("uk", _("Ukrainian")),
    ("vi", _("Vietnamese")),
    ("zh-hans", _("Simplified Chinese")),
    ("zh-hant", _("Traditional Chinese")),
]
LOCALE_PATHS = [os.path.join(BASE_DIR, "locale")]
USE_I18N = True
USE_L10N = True
USE_TZ = True

######################################################
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
    }
}
INTERNAL_IPS = ['127.0.0.1',]
SESSION_COOKIE_AGE = 12096000

# fluent-comments settings:
COMMENTS_APP = 'fluent_comments'

CHATTER_DEBUG = False
ANONYMOUS_USER_ID = -1
SITE_ID = 1
# Test runner
TEST_RUNNER = 'django_coverage.coverage_runner.CoverageRunner'
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/


TEMPLATES[0]['DIRS'] = [os.path.join(BASE_DIR,'templates')]

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/


STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
#STATICFILES_STORAGE = 'whitenoise.django.GzipManifestStaticFilesStorage'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedStaticFilesStorage'

MEDIA_URL = "/media/"
MEDIA_ROOT = os.path.join(BASE_DIR, "mediafiles")

GEOIP_PATH = os.path.join(BASE_DIR, 'geoip')
GEOS_LIBRARY_PATH = envi.get('GEOS_LIBRARY_PATH')
GDAL_LIBRARY_PATH = envi.get('GDAL_LIBRARY_PATH')


#USERENA_MUGSHOT_DEFAULT = 'static/img/user.png'

# django-channels setup
#django_heroku.settings(locals())
